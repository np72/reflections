How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was really quick to track down the bug. Saved me a long time.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would save me drawbacks. Moving forth and back to source code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You get to decide about the size of commit (when to commit changes).
	Cons: You might forget to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git has the "source code project" concept, where files are related.
	Others, like Google Docs, were designed under the concept that each file is an independent entity. 	

How can you use the commands git log and git diff to view the history of files?

    git log: tracing IDs via commit title
	git diff: after tracing the commit title of interest, execute git diff with exactly previous commit ID.

How might using version control make you more confident to make changes that
could break something?

    Would never have to worry about "inserting" bugs...anymore!

Now that you have your workspace set up, what do you want to try using Git for?

    Create My Projects Repositories for efficient Source Code Maintenance
